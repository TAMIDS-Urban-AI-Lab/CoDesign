name: Build Codesign on EAS Platform

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - name: Check out CoDesign repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup EAS with Expo Github Action
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci
        working-directory: ./codesign

      - name: Build Codesign on EAS Platform
        run: eas build --platform ios --profile preview-simulator --non-interactive
        working-directory: ./codesign

  download-artifact:
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - name: Check out CoDesign repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup EAS with Expo Github Action
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install Devicecloud CLI
        run: npm install -g @devicecloud.dev/dcd

      - name: Get latest build info
        run: |
          touch build-info.json
          EXPO_DEBUG=1 eas build:list --limit 1 --platform ios --json --non-interactive > build-info.json
          cat build-info.json
        working-directory: ./codesign

      - name: Download latest iOS build tarball
        run: |
          DOWNLOAD_URL=$(grep -o 'https://[^"]*\.tar\.gz' build-info.json | head -n 1)
          echo "Download URL: $DOWNLOAD_URL"
          curl -L "$DOWNLOAD_URL" -o ios-build.tar.gz
        working-directory: ./codesign

      - name: Extract iOS build
        run: |
          mkdir -p build-output
          tar -xzf ios-build.tar.gz -C build-output
        working-directory: ./codesign

      - name: Zip the iOS build and include date in the filename
        run: |
          cd build-output
          DATE=$(date +'%Y-%m-%d')
          ZIP_NAME="CoDesign-$DATE.zip"
          zip -r "$ZIP_NAME" CoDesign.app
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        working-directory: ./codesign

      - name: Upload the iOS build artifact to GitHub
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ${{ env.ZIP_NAME }}
          path: ./codesign/build-output/${{ env.ZIP_NAME }}
          retention-days: 30

      - name: Upload iOS build and E2E test file to Devicecloud.dev for automated E2E testing
        run: |
          dcd cloud --apiKey ${{ secrets.DCD_API_KEY }} --app-file build-output/${{ env.ZIP_NAME }} --flows ./e2e/ --ios-device iphone-15 --ios-version 17 --name ${{ env.ZIP_NAME }}
        working-directory: ./codesign